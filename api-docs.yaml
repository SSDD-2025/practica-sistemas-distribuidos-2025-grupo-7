openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserrDTO"
    put:
      tags:
      - user-rest-controller
      operationId: replaceUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserrDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserrDTO"
    delete:
      tags:
      - user-rest-controller
      operationId: deletUserr
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserrDTO"
  /api/users/me/image:
    get:
      tags:
      - user-rest-controller
      operationId: getImageUserr
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - user-rest-controller
      operationId: replaceImageUserr
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
              required:
              - image
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - user-rest-controller
      operationId: createImageUserr
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - user-rest-controller
      operationId: deleteImageUserr
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/prizes/{id}:
    get:
      tags:
      - prize-rest-controller
      operationId: getPrizeById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PrizeDTO"
    put:
      tags:
      - prize-rest-controller
      operationId: replacePrize
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrizeDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PrizeDTO"
    delete:
      tags:
      - prize-rest-controller
      operationId: deletePrize
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PrizeDTO"
  /api/plays/{id}:
    get:
      tags:
      - play-rest-controller
      operationId: getPlayById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PlayDTO"
    put:
      tags:
      - play-rest-controller
      operationId: replacePlay
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PlayDTO"
    delete:
      tags:
      - play-rest-controller
      operationId: deletePlay
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PlayDTO"
  /api/games/{id}:
    get:
      tags:
      - game-rest-controller
      operationId: getGame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GameDTO"
    put:
      tags:
      - game-rest-controller
      operationId: replaceGame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GameDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GameDTO"
    delete:
      tags:
      - game-rest-controller
      operationId: deleteGame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GameDTO"
  /api/users/me/addCurrency:
    post:
      tags:
      - user-rest-controller
      operationId: addCurrency
      parameters:
      - name: currency
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserrDTO"
  /api/users/:
    get:
      tags:
      - user-rest-controller
      operationId: getUsers
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelUserrDTO"
    post:
      tags:
      - user-rest-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserrDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserrDTO"
  /api/prizes/{id}/buy:
    post:
      tags:
      - prize-rest-controller
      operationId: buyPrize
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PrizeDTO"
  /api/prizes/:
    get:
      tags:
      - prize-rest-controller
      operationId: getPrizes
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelPrizeDTO"
    post:
      tags:
      - prize-rest-controller
      operationId: createPrize
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrizeDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PrizeDTO"
  /api/plays/:
    get:
      tags:
      - play-rest-controller
      operationId: getPlays
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelPlayDTO"
    post:
      tags:
      - play-rest-controller
      operationId: createPlay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayRequestDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/games/upload:
    post:
      tags:
      - game-rest-controller
      operationId: uploadGame
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: mult
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: min
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: max
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
              - file
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/games/:
    get:
      tags:
      - game-rest-controller
      operationId: getGames
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelGameDTO"
    post:
      tags:
      - game-rest-controller
      operationId: createGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GameDTO"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GameDTO"
  /api/auth/refresh:
    post:
      tags:
      - login-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/logout:
    post:
      tags:
      - login-controller
      operationId: logOut
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/login:
    post:
      tags:
      - login-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/users/me:
    get:
      tags:
      - user-rest-controller
      operationId: me
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserrDTO"
    delete:
      tags:
      - user-rest-controller
      operationId: deletUserrMe
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserrDTO"
  /api/plays:
    get:
      tags:
      - play-rest-controller
      operationId: getMyPlays
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelPlayDTO"
  /api/plays/me:
    get:
      tags:
      - play-rest-controller
      operationId: getMyPlays_1
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelPlayDTO"
  /api/plays/game/{id}:
    get:
      tags:
      - play-rest-controller
      operationId: getPlaysByGame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayDTO"
components:
  schemas:
    GameBasicDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        winMultp:
          type: number
          format: float
        minPossibleNumber:
          type: integer
          format: int32
        maxPossibleNumber:
          type: integer
          format: int32
        hasFich:
          type: boolean
    PlayDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        bet:
          type: number
          format: float
        win:
          type: number
          format: float
        won:
          type: boolean
        user:
          $ref: "#/components/schemas/UserrBasicDTO"
        game:
          $ref: "#/components/schemas/GameBasicDTO"
    PrizeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: integer
          format: int32
        owned:
          type: boolean
        owner:
          $ref: "#/components/schemas/UserrBasicDTO"
    UserrBasicDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        currency:
          type: number
          format: float
        imageBool:
          type: boolean
        roles:
          type: array
          items:
            type: string
    UserrDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        currency:
          type: number
          format: float
        imageBool:
          type: boolean
        roles:
          type: array
          items:
            type: string
        prizeList:
          type: array
          items:
            $ref: "#/components/schemas/PrizeDTO"
        playList:
          type: array
          items:
            $ref: "#/components/schemas/PlayDTO"
    GameDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        winMultp:
          type: number
          format: float
        minPossibleNumber:
          type: integer
          format: int32
        maxPossibleNumber:
          type: integer
          format: int32
        hasFich:
          type: boolean
        playList:
          type: array
          items:
            $ref: "#/components/schemas/PlayDTO"
    PlayRequestDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        gameId:
          type: integer
          format: int64
        bet:
          type: number
          format: float
        selectedNumber:
          type: integer
          format: int32
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    PagedModelUserrDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/UserrDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelPrizeDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/PrizeDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelPlayDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/PlayDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelGameDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/GameDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
